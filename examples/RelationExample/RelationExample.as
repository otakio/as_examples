package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	import flash.events.MouseEvent;		public class RelationExample extends MovieClip{		var objects:Array;		var isDown;		var monitorWidth:uint = 800;		var monitorHeight:uint = 600;		public function RelationExample() {			// constructor code			objects = new Array();			for(var i:uint = 0; i < 10; i++){				objects.push(new RelationObject());				this.addChild(objects[i]);				objects[i].iPt.x = 50 + Math.random()*(monitorWidth - 100);				objects[i].iPt.y = 50 + Math.random()*(monitorHeight - 100);			}			for(i = 0; i < objects.length; i++){				for(var ii:uint = 0; ii < 3; ii++){					var isMe:Boolean = true;					var num:uint;					while(isMe){						num = uint(objects.length * Math.random());						if(num != i){							isMe = false;						}					}					objects[i].addFriend(objects[num]);				}			}			this.stage.addEventListener(MouseEvent.MOUSE_UP, onMUp);			isDown = false;									this.addEventListener(Event.ENTER_FRAME, loop);		}		function loop(e:Event):void{			for(var i:uint; i < objects.length; i++){				if(objects[i].isDown){					objects[i].iPt.x = mouseX;					objects[i].iPt.y = mouseY;					for(var ii:uint; ii < objects[i].friends.length; ii++){						var friend:RelationObject = objects[i].friends[ii];						var angle:Number = Math.PI * 2 / objects[i].friends.length * ii;						friend.iPt.x = objects[i].x + Math.cos(angle) * 100;						friend.iPt.y = objects[i].y + Math.sin(angle) * 100;					}				}			}		}		function onMUp(e:MouseEvent):void{			for(var i:uint; i < objects.length; i++){				objects[i].isDown = false;			}		}	}	}