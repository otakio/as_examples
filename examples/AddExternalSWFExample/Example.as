package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.display.Loader;	import flash.net.URLRequest;		public class Example extends MovieClip{				//外部SWFファイルを読み込むボタンとその配列		var bt1:Button1;		var bt2:Button2;		var bt3:Button3;		var buttons:Array;				//外部SWFファイルを読み込む為の「Loader」とその配列		var loader1:Loader;		var loader2:Loader;		var loader3:Loader;				var loaders:Array;				//外部SWFファイルのURL		var urls:Array;		public function Example() {			// constructor code			this.addEventListener(Event.ENTER_FRAME, loop);						//各配列を初期化			buttons = new Array();			loaders = new Array();			urls = new Array();						bt1 = new Button1();			bt1.x = 50;			bt1.y = 50;			bt1.buttonMode = true;			bt1.addEventListener(MouseEvent.CLICK, onMClick);	//bt1が押されたらonMClickハンドラが呼ばれる			this.addChild(bt1);			buttons.push(bt1);	//ボタン配列にbt1を追加									bt2 = new Button2();			bt2.x = bt1.x;			bt2.y = 120;			bt2.buttonMode = true;			bt2.addEventListener(MouseEvent.CLICK, onMClick);			this.addChild(bt2);			buttons.push(bt2);						bt3 = new Button3();			bt3.x = bt1.x;			bt3.y = 190;			bt3.buttonMode = true;			bt3.addEventListener(MouseEvent.CLICK, onMClick);			this.addChild(bt3);			buttons.push(bt3);									//urls配列に読み込むSWFファイルのアドレス「URLRequest」を追加			urls.push(new URLRequest("Scene1.swf"));	//web上にアップロードして動かない場合は、「http://」で始まる絶対パスで記入			loader1 = new Loader();	//Loaderインスタンスを作成			loaders.push(loader1);	//loaders配列に追加						urls.push(new URLRequest("Scene2.swf"));			loader2 = new Loader();			loaders.push(loader2);			urls.push(new URLRequest("Scene3.swf"));			loader3 = new Loader();			loaders.push(loader3);						//読み込んだ後にSWFファイルの座標等を移動させる必要がある場合、以下のイベントリスナを追加			for(var i:uint = 0; i < loaders.length; i++){				loaders[i].contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaderLoadComplete);			}		}		function loop(e:Event):void{		}				//SWF読み込みボタンのクリック時		function onMClick(e:MouseEvent):void{			for(var i:uint = 0; i < buttons.length; i++){				if(e.target == buttons[i]){					//既に配置されているかを判定					var isAlreadyAdded:Boolean = this.contains(loaders[i]);					if(isAlreadyAdded == true){						//既に配置されていれば取り除き、unloadする。						this.removeChild(loaders[i]);						loaders[i].unload();					}else{						//まだ配置されていない場合はloadし、配置する。						loaders[i].load(urls[i]);						this.addChild(loaders[i]);					}				}			}		}				//読み込んだ後の操作（必要な場合）		function onLoaderLoadComplete(e:Event){			trace("load complete");			e.currentTarget.content.x = 0;	//e.currentTarget.contentに外部SWFファイルの内容が入っている			e.currentTarget.content.y = 0;	//e.currentTarget.contentに外部SWFファイルの内容が入っている		}	}	}