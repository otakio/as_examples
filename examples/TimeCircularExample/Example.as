package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Point;		public class Example extends MovieClip{				var symbols:Array;		var textDatas:Array;		var dates:Array;		var radius:Number = 200;		var cPt:Point = new Point(400, 300);				var isStarted:Boolean = false;		var isCircle:Boolean = false;		public function Example() {			// constructor code			this.addEventListener(Event.ENTER_FRAME, loop);			textDatas = new Array("朝起きた", 								  "授業開始", 								  "授業終了",								  "昼ごはん",								  "打ち合わせ",								  "仕事",								  "夕飯の準備",								  "夕飯",								  "後片付け",								  "「海猿」見た",								  "「主に泣いてます」見た",								  "「さまぁ〜ず×さまぁ〜ず」見た",								  "寝た"								  );			dates = new Array();			dates[0] = new Date(2012,06,01,7,30,0,0);			dates[1] = new Date(2012,06,01,9,0,0,0);			dates[2] = new Date(2012,06,01,12,10,0,0);			dates[3] = new Date(2012,06,01,13,0,0,0);			dates[4] = new Date(2012,06,01,13,30,0,0);			dates[5] = new Date(2012,06,01,15,0,0,0);			dates[6] = new Date(2012,06,01,18,0,0,0);			dates[7] = new Date(2012,06,01,19,0,0,0);			dates[8] = new Date(2012,06,01,20,0,0,0);			dates[9] = new Date(2012,06,01,21,0,0,0);			dates[10] = new Date(2012,06,01,23,40,0,0);			dates[11] = new Date(2012,06,01,1,30,0,0);			dates[12] = new Date(2012,06,01,3,0,0,0);			symbols = new Array(textDatas.length);			var i:uint;			for(i = 0; i < textDatas.length; i++){				symbols[i] = new TextSymbol();				symbols[i].x = 30;				symbols[i].y = 30 + i * 20;				symbols[i].rotation = 90;				symbols[i].textField.text = dates[i].getHours() + ":" + dates[i].getMinutes() + "  " + textDatas[i];				this.addChild(symbols[i]);			}					}		function loop(e:Event):void{			if(isStarted != true){				this.stage.addEventListener(MouseEvent.CLICK, onMClick);				isStarted = true;			}			var i:uint;			if(isCircle == true){				for(i = 0; i < symbols.length; i++){					var angle:Number = -Math.PI/2 + Math.PI*2 / 24 * (dates[i].getHours() + dates[i].getMinutes()/60);					if(angle < 0){						angle += Math.PI*2;					}					if(angle > Math.PI*2){						angle -= Math.PI*2;					}					symbols[i].x += (cPt.x + radius * Math.cos(angle) - symbols[i].x) / 10.0;					symbols[i].y += (cPt.y + radius * Math.sin(angle) - symbols[i].y) / 10.0;					var curRotation = angle / Math.PI * 180 + 90;					if(curRotation < -180){						curRotation += 360;					}					if(curRotation > 180){						curRotation -= 360;					}					trace(curRotation);					symbols[i].rotation += (curRotation - symbols[i].rotation) / 10.0;				}			}			else{				for(i = 0; i < symbols.length; i++){					symbols[i].x += (30 - symbols[i].x) / 10.0;					symbols[i].y += (30 + i * 20 - symbols[i].y) / 10.0;					symbols[i].rotation += (90.0 - symbols[i].rotation) / 10.0;				}			}		}		function onMClick(e:MouseEvent):void{			if(isCircle == true){				isCircle = false;			}else{				isCircle = true;				trace("true");			}		}	}}