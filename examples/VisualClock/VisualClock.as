package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;		public class VisualClock extends MovieClip{				//中心		var center:Point;		//針の半径		var radius:int = 200;				var hoursSymbol:MySymbol;		var secondsSymbol:MySymbol;		var minutesSymbol:MySymbol;				public function VisualClock() {			// constructor code			this.addEventListener(Event.ENTER_FRAME, loop);			center = new Point(300, 225);						hoursSymbol = new MySymbol();			hoursSymbol.x = center.x;			hoursSymbol.y = center.y;			this.addChild(hoursSymbol);						secondsSymbol = new MySymbol();			secondsSymbol.x = center.x;			secondsSymbol.y = center.y;			this.addChild(secondsSymbol);						minutesSymbol = new MySymbol();			minutesSymbol.x = center.x;			minutesSymbol.y = center.y;			this.addChild(minutesSymbol);		}				function loop(e:Event):void{			center.x = this.stage.stageWidth/2;			center.y = this.stage.stageHeight/2;						var date:Date = new Date();			var minutes:Number = date.getMinutes();			var hours:Number = date.getHours();			var seconds:Number = date.getSeconds();			trace(hours + "時" + minutes + "分" + seconds + "秒");			/* 長針 */			var angle:Number = -Math.PI/2 + Math.PI*2 / 60.0 * minutes;			minutesSymbol.x += (center.x + radius * Math.cos(angle) - minutesSymbol.x) / 10.0;			minutesSymbol.y += (center.y + radius * Math.sin(angle) - minutesSymbol.y) / 10.0;			if(hours > 12) hours -= 12;			/* 短針 */			angle =  - Math.PI/2 + Math.PI*2 / 12.0 * hours + Math.PI*2/12.0/60.0 * minutes;			hoursSymbol.x += (center.x + radius * Math.cos(angle) - hoursSymbol.x) / 10.0;			hoursSymbol.y += (center.y + radius * Math.sin(angle) - hoursSymbol.y) / 10.0;			/* 秒針 */			angle = -Math.PI/2 + Math.PI*2 / 60.0 * seconds;			secondsSymbol.x += (center.x + radius * Math.cos(angle) - secondsSymbol.x) / 10.0;			secondsSymbol.y += (center.y + radius * Math.sin(angle) - secondsSymbol.y) / 10.0;		}	}	}