package  {	import flash.display.MovieClip;	import flash.events.Event;	import FlaUtils.FlaGraphics;	import flash.geom.Point;		public class VisualClock extends MovieClip{				//分		var minutesPt:Point;		//時間		var hoursPt:Point;		//秒		var secondsPt:Point;		//中心		var center:Point;		//針の半径		var radius:int = 200;		//初期化されたかどうか		var isStarted:Boolean = false;		public function VisualClock() {			// constructor code			this.addEventListener(Event.ENTER_FRAME, loop);		}				function loop(e:Event):void{			if(!isStarted){				center = new Point(this.stage.stageWidth/2, this.stage.stageHeight/2);				minutesPt = new Point(center.x, center.y);				hoursPt = new Point(center.x, center.y);				secondsPt = new Point(center.x, center.y);				isStarted = true;							}			this.graphics.clear();			FlaGraphics.setColor(0, 0, 0);			center.x = this.stage.stageWidth/2;			center.y = this.stage.stageHeight/2;			FlaGraphics.fillCircle(this, center.x, center.y, 10);			var date:Date = new Date();			var minutes:Number = date.getMinutes();			var hours:Number = date.getHours();			var seconds:Number = date.getSeconds();			trace(hours + "時" + minutes + "分" + seconds + "秒");			/* 長針 */			var angle:Number = -Math.PI/2 + Math.PI*2 / 60.0 * minutes;			minutesPt.x += (center.x + radius * Math.cos(angle) - minutesPt.x) / 10.0;			minutesPt.y += (center.y + radius * Math.sin(angle) - minutesPt.y) / 10.0;			FlaGraphics.fillCircle(this, minutesPt.x, minutesPt.y, 8);			if(hours > 12) hours -= 12;			/* 短針 */			angle =  - Math.PI/2 + Math.PI*2 / 12.0 * hours + Math.PI*2/12.0/60.0 * minutes;			hoursPt.x += (center.x + radius * Math.cos(angle) - hoursPt.x) / 10.0;			hoursPt.y += (center.y + radius * Math.sin(angle) - hoursPt.y) / 10.0;			FlaGraphics.fillCircle(this, hoursPt.x, hoursPt.y, 8);			/* 秒針 */			angle = -Math.PI/2 + Math.PI*2 / 60.0 * seconds;			secondsPt.x += (center.x + radius * Math.cos(angle) - secondsPt.x) / 10.0;			secondsPt.y += (center.y + radius * Math.sin(angle) - secondsPt.y) / 10.0;			FlaGraphics.fillCircle(this, secondsPt.x, secondsPt.y, 8);					}	}	}