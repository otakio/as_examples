package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	import FlaUtils.*;	import flash.events.MouseEvent;	import flash.display.Bitmap;	import flash.display.BitmapData;	public class Example extends MovieClip{				var pt:Array;		var angle:Array;		const r:Number = 225;		const centerY:Number = 225;		var isDown:Boolean = false;		var isStarted:Boolean = false;		var col:Number = 255;				public function Example() {			// constructor code									this.addEventListener(Event.ENTER_FRAME, loop);		}		function loop(e:Event):void{			if(!isStarted){				angle = new Array();				pt = new Array();				const num:int = 60;				for(var i:uint = 0; i < num; i++){					var curX = this.stage.stageWidth / num * i;					var curAngle:Number = i * Math.PI*2 / num;					angle.push(new Number(curAngle));					pt.push(new Point(curX, centerY + r * Math.sin(curAngle)));				}								this.stage.addEventListener(MouseEvent.MOUSE_DOWN, onMDown);				this.stage.addEventListener(MouseEvent.MOUSE_UP, onMUp);				isStarted = true;			}			this.graphics.clear();			if(isDown){				col += (0.0 - col) / 10.0;			}else{				col += (255 - col) / 10.0;			}			FlaGraphics.setColor(col, col, col, 255);			FlaGraphics.fillRect(this, 0, 0, this.stage.stageWidth, this.stage.stageHeight);			for(i = 0; i < pt.length; i++){				FlaGraphics.setHSBColor(360 * angle[i] / (Math.PI * 2), 1.0, 1.0);				if(isDown){					FlaGraphics.drawLine(this, pt[i].x, pt[i].y, pt[i].x, centerY);				}else{					FlaGraphics.fillCircle(this, pt[i].x, pt[i].y, 5);				}				angle[i] += 0.01;				pt[i].y = centerY + r * Math.sin(angle[i]);				if(angle[i] > Math.PI*2)	angle[i] -= Math.PI*2;				if(angle[i] < 0)	angle[i] += Math.PI*2;							}		}		function onMDown(e:MouseEvent):void{			isDown = true;		}		function onMUp(e:MouseEvent):void{			isDown = false;		}	}	}