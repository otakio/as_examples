package  {	import flash.display.MovieClip;	import flash.events.Event;		public class LinearMotionExample3 extends MovieClip{		var symbols:Array;//		var oval:Oval;		//x方向、y方向への速度		var addX:Array;		var addY:Array;		public function LinearMotionExample3() {			// constructor code			/*			oval = new Oval();			oval.x = 0;			oval.y = 0;			this.addChild(oval);			*/			symbols = new Array(100);			addX=new Array(symbols.length);			addY=new Array(symbols.length);			trace(symbols.length);						var i:int;			for(i = 0; i < symbols.length; i++){				symbols[i] = new Oval();				symbols[i].x = Math.random() * 600;				symbols[i].y = Math.random() * 400;				this.addChild(symbols[i]);				addX[i] = Math.random() * 6.0 - 3.0;				addY[i] = Math.random() * 6.0 - 3.0;			}			/*			addX = 2;			addY = 4;			*/						this.addEventListener(Event.ENTER_FRAME, loop);		}		function loop(e:Event):void{			var i:int;			for(i = 0; i < symbols.length; i++){				symbols[i].x += addX[i];				symbols[i].y += addY[i];			}		/*			//ovalのxにaddXずつ加える			oval.x = oval.x + addX;			//ovalのyにaddXずつ加える			oval.y = oval.y + addY;			if(oval.x < 0){				addX *= -1;				oval.x = 0;			}			if(oval.x > this.stage.stageWidth){				addX *= -1;				oval.x = this.stage.stageWidth;			}			if(oval.y < 0){				addY *= -1;				oval.y = 0;			}			if(oval.y > this.stage.stageHeight){				addY *= -1;				oval.y = this.stage.stageHeight;			}			*/		}	}	}